on:
  push:
    branches:
      - '*'
  schedule:
    - cron: "0 0 * * 0"

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v1

    - run: |
        build_date=$(date +%Y%m%d)
        build_number=$[$(git tag | grep -c $build_date || true) + 1]

        TAG="$build_date.$build_number"
        BRANCH="v3.17"
        BASE_NAME="alpine-rpi-kiosk-$BRANCH-$TAG"
        IMAGE_FILE="$BASE_NAME.img"
        PACKAGE_LIST="$BASE_NAME.apk.txt"

        docker run \
          --rm --privileged \
          -v /dev:/dev:ro \
          -v "$PWD":/alpine-rpi-kiosk -w /alpine-rpi-kiosk \
          -e BRANCH="$BRANCH" \
          -e IMAGE_FILE="$IMAGE_FILE" \
          -e PACKAGE_LIST="$PACKAGE_LIST" \
          ubuntu:jammy /bin/sh -c 'apt update && \
            apt upgrade -y && \
            apt install -y fdisk dosfstools curl parted xz-utils qemu-user-static binfmt-support && \
            ./create.sh'

        cat <<EOF >> $GITHUB_ENV
        TAG=$TAG
        IMAGE_FILE=$IMAGE_FILE
        PACKAGE_LIST=$PACKAGE_LIST
        EOF

    - env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OWNER: ${{ github.repository_owner }}
        REPO: ${{ github.event.repository.name }}
      if: github.event_name == 'schedule'
      run: |
        wget -qO- https://$GITHUB_TOKEN:@api.github.com/repos/$OWNER/$REPO/releases/latest | \
          grep "browser_download_url.*.apk.txt" | \
          cut -d : -f 2,3 | tr -d \" | \
          wget -qi- -O packages-latest.txt

        if cmp -s "${{ env.PACKAGE_LIST }}" "packages-latest.txt"; then
          echo "NO_UPDATES=true" >> $GITHUB_ENV
        fi

    - env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      if: github.ref == 'refs/heads/master' && env.NO_UPDATES != 'true' && !env.ACT
      run: |
        gh release create "${{ env.TAG }}" \
          -t "${{ env.TAG }}" \
          "${{ env.IMAGE_FILE }}.xz" \
          "${{ env.PACKAGE_LIST }}"
